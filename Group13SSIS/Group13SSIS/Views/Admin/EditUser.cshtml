@model Group13SSIS.Models.UserVM

@{
    ViewBag.Title = "EditUser";
    Layout = "_AdminLayout.cshtml";
    var user = (Group13SSIS.Models.User)Session["user"];
    if (user == null)
    {
        Response.Redirect("~/home/login");
    }
    else if (user.RoleId != 1)
    {
        Response.Redirect("~/home/sorry");
    }

    var deptlist = ViewData["depts"] as List<Group13SSIS.Models.Dept>;
    var rolelist = ViewData["roles"] as List<Group13SSIS.Models.Role>;
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DeptId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select id="DeptId" name="DeptId">
                <option>-- Please select a department --</option>
                @foreach (var dept in deptlist)
                {
                    if (ViewBag.DeptId == dept.DeptId)
                    {
                        @:<option value="@dept.DeptId" selected>@dept.Name</option>
                    }
                    else
                    {
                        @:<option value="@dept.DeptId">@dept.Name</option>
                    }
                }
            </select>
            @Html.ValidationMessageFor(model => model.DeptId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RoleId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select id="RoleId" name="RoleId">
                <option>-- Please select a role --</option>
                @foreach (var role in rolelist)
                {
                    if (ViewBag.RoleId == role.RoleId)
                    {
                        @:<option value="@role.RoleId" selected>@role.Name</option>
                    }
                    else
                    {
                        @:<option value="@role.RoleId">@role.Name</option>
                    }
                }
            </select>
            @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "UserList")
</div>
